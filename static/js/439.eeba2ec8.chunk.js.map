{"version":3,"file":"static/js/439.eeba2ec8.chunk.js","mappings":"gRAEaA,EAAOC,EAAAA,QAAAA,GAAH,4HAOJC,EAASD,EAAAA,QAAAA,EAAH,4CAINE,EAASF,EAAAA,QAAAA,EAAH,yF,SCTJ,SAASG,EAAT,GAA2C,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,QAC5C,OACE,UAACN,EAAD,YACE,UAACG,EAAD,sBAAiBE,MACjB,SAACH,EAAD,UAASI,MAGd,CCTM,IAAMC,EAAON,EAAAA,QAAAA,GAAH,+DAKJO,EAAYP,EAAAA,QAAAA,EAAH,8DCGP,SAASQ,IACtB,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,EAAoBC,OAAOH,GAyBjC,OAvBAI,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GACJR,GAAgB,OAAIQ,EAASC,KAAKC,SACnC,IACAC,OAAM,SAAUC,GACXA,EAAMJ,SACEK,EAAAA,GAAAA,MAAYD,EAAMJ,SAASC,KAAM,CACzCK,SAAU,MAEHF,EAAMG,QACLF,EAAAA,GAAAA,MAAY,wBAAyB,CAC7CC,SAAU,MAGFD,EAAAA,GAAAA,MAAsBD,EAAMI,QAAU,CAC9CF,SAAU,KAGf,IACAG,SACJ,GAAE,CAACd,KAGF,8BAC2B,IAAxBJ,EAAamB,QACZ,SAACvB,EAAD,UACGI,EAAaoB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAI3B,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/B,OAAO,SAACF,EAAD,CAAsBC,OAAQA,EAAQC,QAASA,GAA7B0B,EAC1B,OAGH,SAACxB,EAAD,wDAIP,C,mMCjDDyB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,iFACQH,EAAAA,EAAAA,IAAA,+BACaC,EADb,kBAC8BE,IAFtC,0GAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BxB,GAA/B,iFACQoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,oBAAuCqB,IAD/C,0GAIA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BzB,GAA/B,iFACQoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,4BAA+CqB,IADvD,0GAIA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAA+BL,GAA/B,iFACQoB,EAAAA,EAAAA,IAAA,iBAAoBpB,EAApB,4BAA+CqB,IADvD,0GAIA,IAAMK,EAAiB,mCAAG,WAAMC,GAAN,uFACZP,EAAAA,EAAAA,IAAA,0BACEO,EADF,oBACkBN,EADlB,wCADY,cACzBO,EADyB,yBAKxBA,EAAKpB,MALmB,2CAAH,qD","sources":["components/ReviewsItem/ReviewsItem.styled.jsx","components/ReviewsItem/ReviewsItem.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  padding: 10px 10px;\n  border-radius: 5px;\n  margin-bottom: 10px;\n  border: 1px solid #0000a0;\n`;\n\nexport const Review = styled.p`\n  font-size: 14px;\n`;\n\nexport const Author = styled.p`\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 10px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Item, Author, Review } from './ReviewsItem.styled';\n\nexport default function ReviewsItem({ author, content }) {\n  return (\n    <Item>\n      <Author>Author: {author}</Author>\n      <Review>{content}</Review>\n    </Item>\n  );\n}\n\nReviewsItem.propTypes = {\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 10px;\n`;\n\nexport const NoReviews = styled.p`\n  padding: 20px;\n  font-size: 16px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from 'services/API';\n\nimport { toast } from 'react-toastify';\n\nimport ReviewsItem from 'components/ReviewsItem';\nimport { List, NoReviews } from './Reviews.styled';\n\nexport default function Reviews() {\n  const [movieReviews, setMovieReviews] = useState([]);\n  const { movieId } = useParams();\n  const movieIdTypeNumber = Number(movieId);\n\n  useEffect(() => {\n    getMovieReviews(movieIdTypeNumber)\n      .then(response => {\n        setMovieReviews([...response.data.results]);\n      })\n      .catch(function (error) {\n        if (error.response) {\n                    toast.error(error.response.data, {\n            duration: 1000,\n          });\n        } else if (error.request) {\n                    toast.error('XMLHttpRequest failed', {\n            duration: 1000,\n          });\n        } else {\n                    toast.error(('Error', error.message), {\n            duration: 1000,\n          });\n        }\n      })\n      .finally();\n  }, [movieIdTypeNumber]);\n\n  return (\n    <>\n      {movieReviews.length !== 0 ? (\n        <List>\n          {movieReviews.map(({ id, author, content }) => {\n            return <ReviewsItem key={id} author={author} content={content} />;\n          })}\n        </List>\n      ) : (\n        <NoReviews>We don`t have any reviews for this movie</NoReviews>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '559cbcab39764ce535027da10f396384';\n\nexport async function getSearchMovie(searchQuery) {\n  return await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  );\n}\n\nexport async function getMovieDetails(movieId) {\n  return await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n}\n\nexport async function getMovieCredits(movieId) {\n  return await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n}\n\nexport async function getMovieReviews(movieId) {\n  return await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n}\n\nexport const getMoviesTrending = async type => {\n  const resp = await axios.get(\n    `/trending/movie/${type}?api_key=${API_KEY}&language=en-US&include_adult=false`\n  );\n\n  return resp.data;\n};\n"],"names":["Item","styled","Review","Author","ReviewsItem","author","content","List","NoReviews","Reviews","useState","movieReviews","setMovieReviews","movieId","useParams","movieIdTypeNumber","Number","useEffect","getMovieReviews","then","response","data","results","catch","error","toast","duration","request","message","finally","length","map","id","axios","API_KEY","getSearchMovie","searchQuery","getMovieDetails","getMovieCredits","getMoviesTrending","type","resp"],"sourceRoot":""}