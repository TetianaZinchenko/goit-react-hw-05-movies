{"version":3,"file":"static/js/978.83aa247a.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.jsx","services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  justify-content: start;\n  gap: 20px;\n  padding: 10px 10px 20px 10px;\n  border-radius: 5px 5px 0 0;\n    border-bottom: 1px solid #0000a0;\n    box-shadow: inset 0 0 3px 1px #303f9f, inset #3f51b5 -5px -5px 8px 5px,\n    inset rgba(255, 255, 255, 0.5) 5px 5px 8px 5px, 1px 1px 1px #303f9f,\n    -2px -2px 5px #3f51b5;\n`;\n\nexport const PosterWrapper = styled.div`\n  display: block;\n  min-width: 350px;\n`;\n\nexport const Poster = styled.img`\n  border-radius: 10px;\n`;\n\nexport const MovieInfoText = styled.div`\n  padding: 20px;\n    border-radius: 5px;\n`;\n\nexport const MovieTitle = styled.h2`\n  color: #0000a0;\n  font-size: 32px;\n  font-weight: 700;\n  padding-bottom: 30px;\n`;\n\nexport const InfoTitles = styled.p`\n  color: #0000a0;\n  font-size: 20px;\n  font-weight: 700;\n  padding-bottom: 30px;\n`;\n\nexport const InfoText = styled.p`\n  font-size: 16px;\n  padding-bottom: 30px;\n`;\n\nexport const ReviewsTitle = styled.h2`\n  text-align: center;\n  font-size: 32px;\n  padding: 10px;\n  margin-top: 50px;\n  margin-bottom: 0;\n`;\n\nexport const ReviewsText = styled.h2`\n  text-align: center;\n  font-size: 16px;\n`;\n\nexport const AdditWrapper = styled.div`\n    border-bottom: 1px solid #0000a0;\n    box-shadow: 0 2px 4px #303f9f;\n    padding-top: 20px;\n`;\n\nexport const AdditInfo = styled.p`\n  font-size: 16px;\n  padding-bottom: 20px;\n  padding-left: 10px;\n`;\n\nexport const AdditList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  list-style: none;\n   border-bottom: 1px solid #0000a0;\n    box-shadow: 0 2px 4px #303f9f;\n    padding-bottom: 20px;\n`;\n\nexport const AdditListItem = styled.li`\n  padding-left: 20px;\n  font-size: 16px;\n`;\n\nexport const LinkItem = styled(Link)`\n  font-size: 16px;\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const LinkStyles = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 8px;\n  padding: 16px 16px;\n  font-size: 16px;\n  color: #0000a0;\n  text-decoration: none;\n  border: 1px solid #0000a0;\n  border-radius: 5px;\n  font-weight: 500;\n  text-transform: uppercase;\n  margin-bottom: 20px;\n\n  :hover {\n    color: #ffffff;\n    background-color: #3f51b5;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { LinkStyles } from './BackLink.styled';\n\nimport { BsFillArrowLeftCircleFill } from 'react-icons/bs';\n\nexport default function BackLink({ to, children }) {\n  return (\n    <LinkStyles to={to}>\n      <BsFillArrowLeftCircleFill size=\"16\" />\n      {children}\n    </LinkStyles>\n  );\n}\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n  children: PropTypes.node,\n};\n","import { useEffect, useState, useRef } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\n\nimport { getMovieDetails } from 'services/API';\n\nimport {\n  PosterWrapper,\n  MovieInfo,\n  MovieInfoText,\n  MovieTitle,\n  InfoTitles,\n  InfoText,\n  Poster,\n  AdditInfo,\n  AdditList,\n  AdditListItem,\n  AdditWrapper,\n  LinkItem,\n} from './MovieDetails.styled';\nimport BackLink from 'components/BackLink';\n\nimport { toast } from 'react-toastify';\n\nimport defaultImage from '../../images/no-image.png';\n\nexport default function MovieDetails() {\n  const [movieById, setMovieById] = useState({});\n  const { movieId } = useParams();\n\n  const movieIdTypeNumber = Number(movieId);\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '';\n  const backlinkRef = useRef(backLinkHref);\n\n  useEffect(() => {\n    getMovieDetails(movieIdTypeNumber)\n      .then(response => {\n        setMovieById(response.data);\n      })\n      .catch(function (error) {\n        if (error.response) {\n                    toast.error(error.response.data, {\n            duration: 1000,\n          });\n        } else if (error.request) {\n                    toast.error('XMLHttpRequest failed', {\n            duration: 1000,\n          });\n        } else {\n                    toast.error(('Error', error.message), {\n            duration: 1000,\n          });\n        }\n      })\n      .finally();\n  }, [movieIdTypeNumber]);\n\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    overview,\n    genres,\n    vote_average,\n  } = movieById;\n\n  const year = release_date?.slice(0, 4);\n  const movieGenres = genres?.map(genre => genre.name).join(', ');\n  const userVote = Math.round(vote_average * 10);\n\n  const poster =\n    poster_path !== null\n      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n      : defaultImage;\n\n  return (\n    <main>\n      <BackLink to={backlinkRef.current}>Back to list</BackLink>\n      <MovieInfo>\n        <PosterWrapper>\n          <Poster src={poster} alt=\"\" width=\"250\" />\n        </PosterWrapper>\n        <MovieInfoText>\n          <MovieTitle>\n            {original_title} ({year})\n          </MovieTitle>\n          <InfoText>User Score: {userVote}%</InfoText>\n          <>\n            <InfoTitles>Overview</InfoTitles>\n            <InfoText>{overview}</InfoText>\n          </>\n          <>\n            <InfoTitles>Genres</InfoTitles>\n            <InfoText>{movieGenres}</InfoText>\n          </>\n        </MovieInfoText>\n      </MovieInfo>\n      <AdditWrapper>\n        <AdditInfo>Additional information</AdditInfo>\n        <AdditList>\n          <AdditListItem>\n            <LinkItem to=\"cast\">Cast</LinkItem>\n          </AdditListItem>\n          <AdditListItem>\n            <LinkItem to=\"reviews\">Reviews</LinkItem>\n          </AdditListItem>\n        </AdditList>\n        <Outlet />\n      </AdditWrapper>\n    </main>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '559cbcab39764ce535027da10f396384';\n\nexport async function getSearchMovie(searchQuery) {\n  return await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  );\n}\n\nexport async function getMovieDetails(movieId) {\n  return await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n}\n\nexport async function getMovieCredits(movieId) {\n  return await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n}\n\nexport async function getMovieReviews(movieId) {\n  return await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n}\n\nexport const getMoviesTrending = async type => {\n  const resp = await axios.get(\n    `/trending/movie/${type}?api_key=${API_KEY}&language=en-US&include_adult=false`\n  );\n\n  return resp.data;\n};\n"],"names":["MovieInfo","styled","PosterWrapper","Poster","MovieInfoText","MovieTitle","InfoTitles","InfoText","AdditWrapper","AdditInfo","AdditList","AdditListItem","LinkItem","Link","LinkStyles","BackLink","to","children","size","MovieDetails","useState","movieById","setMovieById","movieId","useParams","movieIdTypeNumber","Number","backLinkHref","useLocation","state","from","backlinkRef","useRef","useEffect","getMovieDetails","then","response","data","catch","error","toast","duration","request","message","finally","poster_path","original_title","release_date","overview","genres","vote_average","year","slice","movieGenres","map","genre","name","join","userVote","Math","round","poster","defaultImage","current","src","alt","width","axios","API_KEY","getSearchMovie","searchQuery","getMovieCredits","getMovieReviews","getMoviesTrending","type","resp"],"sourceRoot":""}