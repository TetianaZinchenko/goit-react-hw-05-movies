{"version":3,"file":"static/js/92.67a09e80.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.js","components/Notification/Notification.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js","services/API.js"],"sourcesContent":["const { default: styled } = require('@emotion/styled');\n\nconst Spinner = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport { Spinner };\n","import React from 'react';\n\nimport GridLoader from 'react-spinners/GridLoader';\n\nimport { Spinner } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <Spinner>\n      <GridLoader color=\"#0000a0\" aria-label=\"Loading Spinner\" size={50} />\n    </Spinner>\n  );\n};\n\nexport { Loader };\n","import PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nexport const Notification = ({ message }) => {\n  return <Message>{message}</Message>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nconst Message = styled.p`\n  color: #ff0000;\n  font-weight: 700;\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nconst Section = styled.section`\n  padding-top: 24px;\n  padding-bottom: 24px;\n  `;\n\nconst Container = styled.div`\n  width: 1280px;\n  padding: 20px;\n    margin-left: auto;\n  margin-right: auto;\n`;\n\nconst MovieWrapper = styled.div`\n  display: flex;\n  gap: 32px;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  box-shadow: 0 8px 8px #0000a0;\n\n  img {\n        width: 320px;\n    margin: 20px;\n  }\n\n  p {\n        margin: 30px;\n    color: #00003e;\n  }\n\n  h2 {\n    margin-left: 40px;\n  }\n`;\n\nconst Title = styled.h1`\n    margin: 30px;\n  font-size: 42px;\n`;\n\nconst GenreWrapper = styled.p`\n  display: flex;\n  gap: 12px;\n`;\n\nconst Genre = styled.span`\n  padding: 4px 12px;\n  font-size: 16px;\n  line-height: 1.4;\n  border: 1px solid #0000a0;\n  border-radius: 4px;\n`;\n\nconst AdditionalInfo = styled.div`\n    margin-bottom: 32px;\n  margin-top: 40px;\n\n  h2 {\n    margin-bottom: 24px;\n   font-size: 36px;\n  }\n  ul {\n    display: flex;\n    gap: 16px;\n  }\n`;\n\nconst NavItem = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  text-transform: capitalize;\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &.active {\n    color: #0000a0;\n  }\n\n  &:hover:not(.active),\n  &:focus-visible:not(.active) {\n    color: #5218fa;\n  }\n`;\n\nexport {\n  Section,\n  Container,\n  MovieWrapper,\n  Title,\n  GenreWrapper,\n  Genre,\n  AdditionalInfo,\n  NavItem,\n};\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport { IoPeopleOutline, IoNewspaperOutline } from 'react-icons/io5';\nimport { BsArrowLeftCircle } from 'react-icons/bs';\n\nimport { getMovieById } from 'services/API';\n\nimport { Notification } from 'components/Notification';\nimport { Loader } from 'components/Loader';\n\nimport {\n  Section,\n  Container,\n  MovieWrapper,\n  Title,\n  GenreWrapper,\n  Genre,\n  AdditionalInfo,\n  NavItem,\n} from './MovieDetails.styled';\n\nimport defaultPicture from '../../images/no-poster.jpg';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVED: 'resolved',\n};\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const location = useLocation();\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    getMovieById(movieId)\n      .then(movieInfo => {\n        if (!Object.keys(movieInfo).length) {\n          setError(\n            'We are sorry, but we did not find any information about movie :('\n          );\n          setStatus(Status.REJECTED);\n          return;\n        }\n        setMovie(movieInfo);\n        setStatus(Status.RESOLVED);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus(Status.REJECTED);\n      });\n  }, [movieId]);\n\n  const goBack = location.state?.from ?? '/';\n\n  return (\n    <main>\n      <Section>\n        <Container>\n          <NavItem to={goBack}>\n            <BsArrowLeftCircle size={24} outline=\"#0000a0\" />\n            <span>Go back</span>\n          </NavItem>\n          {status === Status.PENDING && <Loader />}\n          {status === Status.REJECTED && <Notification message={error} />}\n          {status === Status.RESOLVED && (\n            <>\n              <MovieWrapper>\n                <img\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                      : defaultPicture\n                  }\n                  alt={movie.title}\n                />\n                <div>\n                  <Title>\n                    {movie.title} ({new Date(movie.release_date).getFullYear()})\n                  </Title>\n                  <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n                  <h2>Overview</h2>\n                  <p>{movie.overview}</p>\n                  <h2>Genres</h2>\n                  <GenreWrapper>\n                    {movie.genres.map(({ name }) => (\n                      <Genre key={name}>{name}</Genre>\n                    ))}\n                  </GenreWrapper>\n                </div>\n              </MovieWrapper>\n              <AdditionalInfo>\n                <h2>Additional information</h2>\n                <ul>\n                  <li>\n                    <NavItem to=\"cast\" state={{ from: goBack }}>\n                      <IoPeopleOutline size={24} outline=\"#0000a0\" />\n                      <span>Cast</span>\n                    </NavItem>\n                  </li>\n                  <li>\n                    <NavItem to=\"reviews\" state={{ from: goBack }}>\n                      <IoNewspaperOutline size={24} outline=\"#0000a0\" />\n                      <span>Reviews</span>\n                    </NavItem>\n                  </li>\n                </ul>\n              </AdditionalInfo>\n              <Suspense fallback={null}>\n                <Outlet />\n              </Suspense>\n            </>\n          )}\n        </Container>\n      </Section>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '559cbcab39764ce535027da10f396384';\n\nasync function getTrendingMovies() {\n  const response = await fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return await response.json();\n  }\n  return await Promise.reject(\n    new Error(\"Oops, something went wrong... We can't load trending movies :(\")\n  );\n}\n\nasync function getMovieById(id) {\n  const response = await fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n  if (response.ok) {\n    return await response.json();\n  }\n  return await Promise.reject(\n    new Error(\n      'We are sorry, but we did not find any information about movie :('\n    )\n  );\n}\n\nasync function getMovieCast(id) {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return await response.json();\n  }\n  return await Promise.reject(\n    new Error('We are sorry, but we did not find any information about cast :(')\n  );\n}\n\nasync function getMovieReviews(id) {\n  const response = await fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  if (response.ok) {\n    return await response.json();\n  }\n  return await Promise.reject(\n    new Error('We do not have any reviews for this movie :(')\n  );\n}\n\nasync function getMovieByQuery(query) {\n  const response = await fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  if (response.ok) {\n    return await response.json();\n  }\n  return await Promise.reject(\n    new Error(`No results containing ${query} were found.`)\n  );\n}\n\nexport {\n  getTrendingMovies,\n  getMovieById,\n  getMovieCast,\n  getMovieReviews,\n  getMovieByQuery,\n};\n"],"names":["Spinner","require","default","div","Loader","color","size","Notification","message","Message","styled","Section","Container","MovieWrapper","Title","GenreWrapper","Genre","AdditionalInfo","NavItem","NavLink","Status","movieId","useParams","useState","movie","setMovie","error","setError","status","setStatus","location","useLocation","useEffect","getMovieById","then","movieInfo","Object","keys","length","catch","goBack","state","from","to","outline","src","poster_path","defaultPicture","alt","title","Date","release_date","getFullYear","Math","round","vote_average","overview","genres","map","name","Suspense","fallback","BASE_URL","API_KEY","getTrendingMovies","fetch","response","ok","json","Promise","reject","Error","id","getMovieCast","getMovieReviews","getMovieByQuery","query"],"sourceRoot":""}