{"version":3,"file":"static/js/495.2277f959.chunk.js","mappings":"wRAEMA,EAAaC,EAAAA,QAAAA,IAAH,mKASVC,EAAQD,EAAAA,QAAAA,GAAH,wE,wCCTLE,EAAgBF,EAAAA,QAAAA,GAAH,oK,SCEJ,SAASG,EAAT,GAAsC,IAAbC,EAAY,EAAZA,SACtC,OAAO,SAACF,EAAD,UAAgBE,GACxB,CCJM,I,IAAMC,EAAgBL,EAAAA,QAAAA,GAAH,uhBCEbM,EAAO,SAAC,GAAD,IAAGF,EAAH,EAAGA,SAAH,OAAkB,SAACC,EAAD,UAAgBD,GAAlC,ECFdG,EAAQP,EAAAA,QAAAA,IAAH,8QAeLC,EAAQD,EAAAA,QAAAA,IAAH,2L,cCREQ,EAAY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClBC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,YACTC,ECPA,GAAN,OAJqB,8BAIrB,OAHiB,QDYjB,OACE,iCACE,SAACL,EAAD,WACE,gBACEM,IAAG,UAAKF,EAAW,UAAMC,GAAN,OAAmBD,GAAgBG,GACtDC,IAAG,iBAAYL,QAGnB,SAAC,EAAD,WACE,wBAAKA,QAIZ,EEbc,SAASM,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAoBjB,OAlBAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,6GAEuBC,EAAAA,GAA2B,OAFlD,OAEUC,EAFV,OAIIP,GAAU,SAAAQ,GAAU,wBAAQA,IAAR,OAAuBD,EAAKE,SAA5B,IACpBP,GAAW,GALf,gDAOIQ,EAAAA,GAAAA,MAAsB,KAAMC,QAAU,CACpCC,SAAU,MAEZV,GAAW,GAVf,0DAFc,sBACdA,GAAW,GADG,mCAedW,EACD,GAAE,KAGD,UAACjC,EAAD,YACE,SAACE,EAAD,6BACCmB,IAAW,SAACa,EAAA,EAAD,IACXf,EAAOgB,OAAS,IACf,SAAC/B,EAAD,UACGe,EAAOiB,KAAI,SAAAC,GAAI,OACd,SAAC9B,EAAD,WACE,SAAC,KAAD,CAAM+B,GAAE,iBAAYD,EAAKE,IAAMC,MAAO,CAAEC,KAAMlB,GAA9C,UACE,SAACd,EAAD,CAAWC,QAAS2B,OAFbA,EAAKE,GADF,QAWzB,C,mMCnDDG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,iFACQH,EAAAA,EAAAA,IAAA,+BACaC,EADb,kBAC8BE,IAFtC,0GAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,iFACQL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,oBAAuCJ,IAD/C,0GAIA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,iFACQL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,4BAA+CJ,IADvD,0GAIA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,iFACQL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,4BAA+CJ,IADvD,0GAIA,IAAMO,EAAiB,mCAAG,WAAMC,GAAN,uFACZT,EAAAA,EAAAA,IAAA,0BACES,EADF,oBACkBR,EADlB,wCADY,cACzBS,EADyB,yBAKxBA,EAAKzB,MALmB,2CAAH,qD","sources":["pages/Homepage/Homepage.styled.jsx","components/MoviesGallery/MoviesGallery.styled.jsx","components/MoviesGallery/MoviesGallery.jsx","components/Card/Card.styled.jsx","components/Card/Card.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","helpers/createImageUrl.js","pages/Homepage/Homepage.jsx","services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst HomeStyles = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  color: #303f9f;\n`;\n\nconst Title = styled.h2`\n  padding-bottom: 10px;\n  text-align: center;\n`;\n\nexport { HomeStyles, Title };\n","import styled from '@emotion/styled';\n\nconst GalleryStyles = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 40px;\n  justify-content: space-evenly;\n  padding-top: 20px;\n  padding-bottom: 10px;\n`;\n\nexport { GalleryStyles };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GalleryStyles } from './MoviesGallery.styled';\n\nexport default function MoviesGallery({ children }) {\n  return <GalleryStyles>{children}</GalleryStyles>;\n}\n\nMoviesGallery.propTypes = {\n  children: PropTypes.node,\n};\n","import styled from '@emotion/styled';\n\nexport const CardContainer = styled.li`\n  width: 280px;\n    height: auto;\n  margin-bottom: 20px;\n  border-radius: 5px;\n    box-shadow: inset 0 0 3px 1px #303f9f, inset #3f51b5 -5px -5px 8px 5px,\n    inset rgba(255, 255, 255, 0.5) 5px 5px 8px 5px, 1px 1px 1px #303f9f,\n    -2px -2px 5px #3f51b5;\n  cursor: pointer;\n\n  &:active {\n       box-shadow: inset 0 0 3px 1px #000073, inset #0000a0 -5px -5px 8px 5px,\n      inset rgba(255, 255, 255, 0.5) 5px 5px 8px 5px, 1px 1px 1px #000073,\n      -2px -2px 5px #0000a0;\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CardContainer } from './Card.styled';\n\nexport const Card = ({ children }) => <CardContainer>{children}</CardContainer>;\n\nCard.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from '@emotion/styled';\n\nconst Thumb = styled.div`\n  width: 280px;\n  height: 375px;\n  border-top-left-radius: 5px;\n  border-top-right-radius: 5px;\n\n  img {\n    width: 100%;\n    height: 100%;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    object-fit: cover;\n  }\n`;\n\nconst Title = styled.div`\n  display: flex;\n  align-items: center;\n  height: 50px;\n  padding: 20px 20px;\n\n  h2 {\n    font-size: 16px;\n    font-weight: 500;\n    color: #303f9f;\n  }\n`;\n\nexport { Thumb, Title };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Thumb, Title } from './MovieCard.styled';\n\nimport createImageUrl from '../../helpers/createImageUrl';\n\nimport defaultImage from '../../images/no-image.png';\n\nexport const MovieCard = ({ details }) => {\n  const { title, poster_path } = details;\n  const baseImgUrl = createImageUrl();\n\n  return (\n    <>\n      <Thumb>\n        <img\n          src={`${poster_path ? `${baseImgUrl}${poster_path}` : defaultImage}`}\n          alt={`Poster ${title}`}\n        />\n      </Thumb>\n      <Title>\n        <h2>{title}</h2>\n      </Title>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  details: PropTypes.shape({\n    title: PropTypes.string,\n    poster_path: PropTypes.string,\n  }),\n};\n","const IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\nconst IMAGE_SIZE = 'w342';\n\nexport default function createImageUrl() {\n  return `${IMAGE_BASE_URL}${IMAGE_SIZE}`;\n}\n","import { useState, useEffect } from 'react';\n\nimport * as movieApi from 'services/API';\n\nimport { Title, HomeStyles } from './Homepage.styled';\n\nimport { toast } from 'react-toastify';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Loader } from 'components/Loader';\nimport MoviesGallery from 'components/MoviesGallery';\nimport { Card } from 'components/Card';\nimport { MovieCard } from 'components/MovieCard';\n\nexport default function Homepage() {\n  const [trends, setTrends] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    setLoading(true);\n    async function fetchData() {\n      try {\n        const data = await movieApi.getMoviesTrending('day');\n\n        setTrends(prevTrends => [...prevTrends, ...data.results]);\n        setLoading(false);\n      } catch (error) {\n        toast.error(('Error', error.message), {\n          duration: 1000,\n        });\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <HomeStyles>\n      <Title>Daily Trending</Title>\n      {loading && <Loader />}\n      {trends.length > 0 && (\n        <MoviesGallery>\n          {trends.map(item => (\n            <Card key={item.id}>\n              <Link to={`movies/${item.id}`} state={{ from: location }}>\n                <MovieCard details={item} />\n              </Link>\n            </Card>\n          ))}\n        </MoviesGallery>\n      )}\n    </HomeStyles>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '559cbcab39764ce535027da10f396384';\n\nexport async function getSearchMovie(searchQuery) {\n  return await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  );\n}\n\nexport async function getMovieDetails(movieId) {\n  return await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n}\n\nexport async function getMovieCredits(movieId) {\n  return await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n}\n\nexport async function getMovieReviews(movieId) {\n  return await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n}\n\nexport const getMoviesTrending = async type => {\n  const resp = await axios.get(\n    `/trending/movie/${type}?api_key=${API_KEY}&language=en-US&include_adult=false`\n  );\n\n  return resp.data;\n};\n"],"names":["HomeStyles","styled","Title","GalleryStyles","MoviesGallery","children","CardContainer","Card","Thumb","MovieCard","details","title","poster_path","baseImgUrl","src","defaultImage","alt","Homepage","useState","trends","setTrends","loading","setLoading","location","useLocation","useEffect","movieApi","data","prevTrends","results","toast","message","duration","fetchData","Loader","length","map","item","to","id","state","from","axios","API_KEY","getSearchMovie","searchQuery","getMovieDetails","movieId","getMovieCredits","getMovieReviews","getMoviesTrending","type","resp"],"sourceRoot":""}